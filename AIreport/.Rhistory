slidify::knit2slides
??slidify
??knitr
knit2slides
??knit2slides
library(slidify)
library(slidify)
slidify(inputFile = "C:/Users/SEELE/Desktop/opo/2016HZ/index.Rmd")
knit('index.Rmd', encoding='UTF-8')
knit('index.Rmd', encoding='UTF-8')
knit('E:/迅雷下载/reveal_slidify-gh-pages/reveal_slidify-gh-pages/slides/2016SH/index.Rmd', encoding='UTF-8')
knit('E:/迅雷下载/reveal_slidify-gh-pages/reveal_slidify-gh-pages/slides/2016SH/index.Rmd', encoding='UTF-8')
knit('E:/迅雷下载/reveal_slidify-gh-pages/reveal_slidify-gh-pages/slides/2016SH/index.Rmd', encoding='UTF-8')
library(knitr)
library(slidify)
library(knitr)
# make this an external chunk that can be included in any file
options(width = 100,digits=4)
opts_chunk$set(message = FALSE, fig.align = "center", warning = FALSE, comment = NA, dpi = 100, tidy = FALSE, fig.width=8,fig.height=5,cache = FALSE)
knit_hooks$set(plot = knitr:::hook_plot_html)
num<-c(1:5)
zhenji<-c("2~3","3~4","4~5","5~6","SUM")
shuliang<-c(22,111,19,1,153)
x<-data.frame(num,zhenji,shuliang)
x
num<-c(1:5)
zhenji<-c("2~3","3~4","4~5","5~6","SUM")
shuliang<-c(22,111,19,1,153)
x<-data.frame(num,zhenji,shuliang)
colnames(x)<-c("#","震级","数量")
x
library(formattable)
num<-c(1:5)
zhenji<-c("2~3","3~4","4~5","5~6","SUM")
shuliang<-c(22,111,19,1,153)
x<-data.frame(num,zhenji,shuliang)
colnames(x)<-c("#","震级","数量")
formattable(x,list(shuliang=color_tile("green","red")))
library(formattable)
num<-c(1:5)
zhenji<-c("2~3","3~4","4~5","5~6","SUM")
shuliang<-c(22,111,19,1,153)
x<-data.frame(num,zhenji,shuliang)
colnames(x)<-c("#","震级","数量")
formattable(x,list(shuliang=color_tile("white","orange")))
library(knitr)
library(slidify)
library(formattable)
num<-c(1:5)
zhenji<-c("2~3","3~4","4~5","5~6","SUM")
shuliang<-c(22,111,19,1,153)
x<-data.frame(num,zhenji,shuliang)
colnames(x)<-c("#","震级","数量")
formattable(x,list(shuliang=color_tile("white","orange")))
library(formattable)
num<-c(1:5)
zhenji<-c("2~3","3~4","4~5","5~6","SUM")
shuliang<-c(22,111,19,1,153)
x<-data.frame(num,zhenji,shuliang)
colnames(x)<-c("#","震级","数量")
formattable(x,list(shuliang=color_tile("white","orange")))
x
library(formattable)
num<-c(1:5)
zhenji<-c("2~3","3~4","4~5","5~6","SUM")
shuliang<-c(22,111,19,1,153)
x<-data.frame(num,zhenji,shuliang)
colnames(x)<-c("#","震级","数量")
formattable(x,list(shuliang=color_tile("white","orange")))
library(formattable)
df <- data.frame(
id = 1:10,
name = c("Bob", "Ashley", "James", "David", "Jenny",
"Hans", "Leo", "John", "Emily", "Lee"),
age = c(28, 27, 30, 28, 29, 29, 27, 27, 31, 30),
grade = c("C", "A", "A", "C", "B", "B", "B", "A", "C", "C"),
test1_score = c(8.9, 9.5, 9.6, 8.9, 9.1, 9.3, 9.3, 9.9, 8.5, 8.6),
test2_score = c(9.1, 9.1, 9.2, 9.1, 8.9, 8.5, 9.2, 9.3, 9.1, 8.8),
final_score = c(9, 9.3, 9.4, 9, 9, 8.9, 9.25, 9.6, 8.8, 8.7),
registered = c(TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE),
stringsAsFactors = FALSE)
formattable(df, list(
age = color_tile("white", "orange"),
grade = formatter("span", style = x ~ ifelse(x == "A",
style(color = "green", font.weight = "bold"), NA)),
area(col = c(test1_score, test2_score)) ~ normalize_bar("pink", 0.2),
final_score = formatter("span",
style = x ~ style(color = ifelse(rank(-x) <= 3, "green", "gray")),
x ~ sprintf("%.2f (rank: %02d)", x, rank(-x))),
registered = formatter("span",
style = x ~ style(color = ifelse(x, "green", "red")),
x ~ icontext(ifelse(x, "ok", "remove"), ifelse(x, "Yes", "No")))
))
基础图形的局限
基础图形的局限
基础的图形已经能解决90%的问题
饼图 一维世界
条形图 二维世界
散点、折线图 努力展示高维世界
值得展示的高维数据
不同污染物的情况
城市基本指标
运动员/候选人的数据
library(formattable)
df <- data.frame(
id = 1:10,
name = c("Bob", "Ashley", "James", "David", "Jenny",
"Hans", "Leo", "John", "Emily", "Lee"),
age = c(28, 27, 30, 28, 29, 29, 27, 27, 31, 30),
grade = c("C", "A", "A", "C", "B", "B", "B", "A", "C", "C"),
test1_score = c(8.9, 9.5, 9.6, 8.9, 9.1, 9.3, 9.3, 9.9, 8.5, 8.6),
test2_score = c(9.1, 9.1, 9.2, 9.1, 8.9, 8.5, 9.2, 9.3, 9.1, 8.8),
final_score = c(9, 9.3, 9.4, 9, 9, 8.9, 9.25, 9.6, 8.8, 8.7),
registered = c(TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE),
stringsAsFactors = FALSE)
formattable(df, list(
age = color_tile("white", "orange"))
)
library(formattable)
num<-c(1:5)
zhenji<-c("2~3","3~4","4~5","5~6","SUM")
shuliang<-c(22,111,19,1,153)
x<-data.frame(num,zhenji,shuliang)
colnames(x)<-c("#","震级","数量")
formattable(x,list("数量"=color_tile("white","orange")))
library(formattable)
df <- data.frame(
id = 1:10,
name = c("Bob", "Ashley", "James", "David", "Jenny",
"Hans", "Leo", "John", "Emily", "Lee"),
age = c(28, 27, 30, 28, 29, 29, 27, 27, 31, 30),
grade = c("C", "A", "A", "C", "B", "B", "B", "A", "C", "C"),
test1_score = c(8.9, 9.5, 9.6, 8.9, 9.1, 9.3, 9.3, 9.9, 8.5, 8.6),
test2_score = c(9.1, 9.1, 9.2, 9.1, 8.9, 8.5, 9.2, 9.3, 9.1, 8.8),
final_score = c(9, 9.3, 9.4, 9, 9, 8.9, 9.25, 9.6, 8.8, 8.7),
registered = c(TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE),
stringsAsFactors = FALSE)
formattable(df, list(
age = color_tile("white", "orange"),
grade = formatter("span", style = x ~ ifelse(x == "A",
style(color = "green", font.weight = "bold"), NA)),
area(col = c(test1_score, test2_score)) ~ normalize_bar("pink", 0.2),
final_score = formatter("span",
style = x ~ style(color = ifelse(rank(-x) <= 3, "green", "gray")),
x ~ sprintf("%.2f (rank: %02d)", x, rank(-x))),
registered = formatter("span",
style = x ~ style(color = ifelse(x, "green", "red")),
x ~ icontext(ifelse(x, "ok", "remove"), ifelse(x, "Yes", "No")))
))
library(formattable)
num<-c(1:5)
zhenji<-c("2~3","3~4","4~5","5~6","SUM")
shuliang<-c(22,111,19,1,153)
x<-data.frame(num,zhenji,shuliang)
colnames(x)<-c("#","震级","数量")
formattable(x,list("数量"=color_tile("green","red")))
library(formattable)
num<-c(1:5)
zhenji<-c("2~3","3~4","4~5","5~6","SUM")
shuliang<-c(22,111,19,1,153)
x<-data.frame(num,zhenji,shuliang)
colnames(x)<-c("#","震级","数量")
formattable(x,list("数量"=color_tile("green","red")))
library(formattable)
num<-c(1:5)
zhenji<-c("2~3","3~4","4~5","5~6","SUM")
shuliang<-c(22,111,19,1,153)
x<-data.frame(num,zhenji,shuliang)
colnames(x)<-c("#","震级","数量")
formattable(x,list("数量"=color_tile("green","red")))
library(formattable)
num<-c(1:5)
zhenji<-c("2~3","3~4","4~5","5~6","SUM")
shuliang<-c(22,111,19,1,153)
x<-data.frame(num,zhenji,shuliang)
colnames(x)<-c("#","震级","数量")
formattable(x,list("数量"=color_tile("green","red")))
library(formattable)
num<-c(1:5)
zhenji<-c("2~3","3~4","4~5","5~6","SUM")
shuliang<-c(22,111,19,1,153)
x<-data.frame(num,zhenji,shuliang)
colnames(x)<-c("#","震级","数量")
formattable(x,list("数量"=color_tile("green","red")))
formattable(x,list("数量"~normalize_bar("pink", 0.2)))
formattable(x,list(col="数量"~normalize_bar("pink", 0.2)))
formattable(x,list((col="数量")~normalize_bar("pink", 0.2)))
formattable(x,list("数量"~normalize_bar("pink", 0.2)))
formattable(x,list(area(col="数量")~normalize_bar("pink", 0.2)))
formattable(x,list("数量"=color_tile("green","red"),area(col="数量")~normalize_bar("pink", 0.2)))
formattable(x,list("数量"=color_tile("green","red"),area(col="数量")~normalize_bar(0.2)))
formattable(x,list("震级"=color_tile("green","red"),area(col="数量")~normalize_bar(0.2)))
formattable(x,list(area(col="数量")~normalize_bar(color_tile("white", "orange"), 0.2)))
formattable(x,list(area(col="数量")~normalize_bar("red", 0.2)))
formattable(x,list(area(col="数量")~normalize_bar("red", 0.1)))
formattable(x,list(area(col="数量")~normalize_bar("red", 0.9)))
formattable(x,list(area(col="数量")~normalize_bar("red", 0.2)))
formattable(x,list("震级"=color_tile("green","red"),area(col="数量")~normalize_bar(0.2)))
formattable(x,list("震级"=color_tile("green","red"))
)
??formattable
formattable(x,list("震级"=color_tile("green","red"))
)
formattable(x,list("震级"=color_tile("green","red"),area(col="数量")~normalize_bar("pink", 0.2)))
color_tile
?color_tile
formattable(x,list("震级"=color_tile("green","red"),area(col="数量")~normalize_bar("pink", 0.2)))
formattable(x,list("震级"=color_tile("green","red"),area(col="数量")~normalize_bar("red", 0.2)))
formattable(x,list("震级"=color_tile("whte","red"),area(col="数量")~normalize_bar("red", 0.2)))
formattable(x,list("震级"=color_tile("white","red"),area(col="数量")~normalize_bar("red", 0.2)))
formattable(x,list("震级"=color_tile("pink","red"),area(col="数量")~normalize_bar("red", 0.2)))
formattable(x,list("数量"=color_tile("pink","red")))
formattable(x,list("震级"=color_tile("pink","red"),area(col="数量")~normalize_bar("red", 0.2)))
formattable(x,list("震级"=color_tile("green","red"),area(col="数量")~normalize_bar("red", 0.2)))
library(formattable)
num<-c(1:4)
zhenji<-c("2~3","3~4","4~5","5~6")
shuliang<-c(22,111,19,1)
x<-data.frame(num,zhenji,shuliang)
colnames(x)<-c("#","震级","数量")
formattable(x,list("震级"=color_tile("green","red"),area(col="数量")~normalize_bar("red", 0.2)))
formattable(x,list("#"=color_tile("green","red"),"震级"=color_tile("green","red"),area(col="数量")~normalize_bar("red", 0.2)))
#	years	DateTime	lon	lat	depth	mc
1	2014.06434	2014-01-13 11:38:19.45	106.74	38.98	6	3.2
2	2014.07223	2014-01-16 08:43:27.13	109.65	31.65	7	3.6
3	2014.07453	2014-01-17 04:53:23.17	105.4	32.09	21	3.5
4	2014.08313	2014-01-20 08:10:35.07	110.42	31.11	7	3.5
5	2014.13832	2014-02-09 11:41:05.56	105.42	32.71	21	3.3
6	2014.18937	2014-02-28 02:52:59.34	106.79	39.31	6	4.4
7	2014.18950	2014-02-28 03:59:48.31	106.76	39.32	7	3.5
8	2014.18969	2014-02-28 05:38:27.78	105.11	32.45	16	3.3
years<-c(1:8)
DateTime<-c("2050-13-32 25:61:61.61","2050-13-32 25:61:61.61",
"2050-13-32 25:61:61.61","2050-13-32 25:61:61.61",
"2050-13-32 25:61:61.61","2050-13-32 25:61:61.61",
"2050-13-32 25:61:61.61","2050-13-32 25:61:61.61")
lon<-c(123.12,123.12,123.12,123.12,123.12,123.12,123.12,123.12)
lat<-c(23.12,23.12,23.12,23.12,23.12,23.12,23.12,23.12)
depth<-c(6,7,21,7,21,6,7,16)
mc<-c(3.2,3.6,3.5,3.5,3.3,4.4,3.5,3.3)
x1<-data.frame(years,DateTime,lon,lat,depth,mc)
library(formattable)
formattable(x1,list(area(col="depth")~normalize_bar(#aaff32,0.2),"depth"=color_tile("green","red"))
)
)
()
``
x1
,"depth"=color_tile("green","red")
formattable(x1,list(area(col="depth")~normalize_bar("#aaff32",0.2))
)
formattable(x1,list(area(col="depth")~normalize_bar("#aaff32",0.2)))
formattable(x1,list(area(col="depth")~normalize_bar("#aaff32",0.2),"mc"=color_tile("#ff796c","#ff028d")))
formattable(x1,list(area(col="depth")~normalize_bar("#aaff32",0.2),"mc"=color_tile("yellow","red")))
??revealjs
library(knirts)
library(knitr)
library(slidify)
library(knitr)
library(slidify)
